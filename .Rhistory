if(i == 1){
plot.ts(t(th_qts[,,i,j])[,2], ylim=rgt, ylab=colnames(X)[j], xlab='Time')
}else{
lines(1:n, t(th_qts[,,i,j])[,2])
}
lines(t(th_qts[,,i,j])[,1], lty=2)
lines(t(th_qts[,,i,j])[,3], lty=2)
abline(h=0, col='red')
}
}
th_qts
dim(th_qts)
for(j in 1:p){
for(i in 1:length(vtau)){
rgt <- range(th_qts[,,j,])
if(i == 1){
plot.ts(t(th_qts[,,j,])[,2], ylim=rgt, ylab=colnames(X)[j], xlab='Time')
}else{
lines(1:n, t(th_qts[,,j,])[,2])
}
lines(t(th_qts[,,j,])[,1], lty=2)
lines(t(th_qts[,,j,])[,3], lty=2)
abline(h=0, col='red')
}
}
for(j in 1:p){
for(i in 1:length(vtau)){
rgt <- range(th_qts[,,j,])
if(i == 1){
plot.ts(t(th_qts[,,j,i])[,2], ylim=rgt, ylab=colnames(X)[j], xlab='Time')
}else{
lines(1:n, t(th_qts[,,j,i])[,2])
}
lines(t(th_qts[,,j,i])[,1], lty=2)
lines(t(th_qts[,,j,i])[,3], lty=2)
abline(h=0, col='red')
}
}
for(j in 1:p){
for(i in 1:length(vtau)){
rgt <- range(th_qts[,,j,])
if(i == 1){
plot.ts(t(th_qts[,,j,i])[,2], ylim=rgt, ylab=colnames(X)[j], xlab='Time', col=i)
}else{
lines(1:n, t(th_qts[,,j,i])[,2], col=i)
}
lines(t(th_qts[,,j,i])[,1], lty=2, col=i)
lines(t(th_qts[,,j,i])[,3], lty=2, col=i)
abline(h=0, col='red')
}
}
nS <- nrow(theta_lst[[1]])
nS <- nrow(theta_lst[[1]])
th_arr <- array(dim = c(n, p, length(vtau), Ns))
for (i in 1:length(vtau)) {
for(is in 1:Ns){
th_arr[,,i,is] <- matrix(theta_lst[[i]][is,], nrow = n, byrow=FALSE)
}
}
th_qts <- apply(th_arr, 1:3, quantile, probs=c(0.025, 0.5, 0.975))
for(j in 1:p){
for(i in 1:length(vtau)){
rgt <- range(th_qts[,,j,])
if(i == 1){
plot.ts(t(th_qts[,,j,i])[,2], ylim=rgt, ylab=colnames(X)[j], xlab='Time', col=i)
}else{
lines(1:n, t(th_qts[,,j,i])[,2], col=i)
}
lines(t(th_qts[,,j,i])[,1], lty=2, col=i)
lines(t(th_qts[,,j,i])[,3], lty=2, col=i)
abline(h=0, col='red')
}
}
theta_tau <- NULL; vtau <- c(.05, .5, .95); theta_lst <- list(); i <- 0
for (tau in vtau) {
jags.data$tau <- tau; i <- i+1
jagsfit <- jags(data = jags.data, parameters.to.save = jags.params, DIC = FALSE,
n.iter = It, n.burnin = Bi, n.thin = Nt,
model.file = "model_reg_quant_din.txt", quiet = TRUE)
theta_tau <- cbind(theta_tau, jagsfit$BUGSoutput$sims.matrix)
theta_lst[[i]] <- jagsfit$BUGSoutput$sims.matrix
}
theta_tau <- NULL; vtau <- c(.05, .5, .95); theta_lst <- list(); i <- 0
for (tau in vtau) {
jags.data$tau <- tau; i <- i+1
jagsfit <- jags(data = jags.data, parameters.to.save = jags.params, DIC = FALSE,
n.iter = It, n.burnin = Bi, n.thin = Nt,
model.file = "model_reg_quant_din.txt", quiet = TRUE)
theta_tau <- cbind(theta_tau, jagsfit$BUGSoutput$sims.matrix)
theta_lst[[i]] <- jagsfit$BUGSoutput$sims.matrix
}
theta_tau <- NULL; vtau <- c(.05, .5, .95); theta_lst <- list(); i <- 0
for (tau in vtau) {
jags.data$tau <- tau; i <- i+1
jagsfit <- jags(data = jags.data, parameters.to.save = jags.params, DIC = FALSE,
n.iter = It, n.burnin = Bi, n.thin = Nt,
model.file = "model_reg_quant_din.txt", quiet = TRUE)
theta_tau <- cbind(theta_tau, jagsfit$BUGSoutput$sims.matrix)
theta_lst[[i]] <- jagsfit$BUGSoutput$sims.matrix
}
names(theta_lst) <- vtau
nS <- nrow(theta_lst[[1]])
th_arr <- array(dim = c(n, p, length(vtau), Ns))
for (i in 1:length(vtau)) {
for(is in 1:Ns){
th_arr[,,i,is] <- matrix(theta_lst[[i]][is,], nrow = n, byrow=FALSE)
}
}
th_qts <- apply(th_arr, 1:3, quantile, probs=c(0.025, 0.5, 0.975))
for(j in 1:p){
for(i in 1:length(vtau)){
rgt <- range(th_qts[,,j,])
if(i == 1){
plot.ts(t(th_qts[,,j,i])[,2], ylim=rgt, ylab=colnames(X)[j], xlab='Time', col=i)
}else{
lines(1:n, t(th_qts[,,j,i])[,2], col=i)
}
lines(t(th_qts[,,j,i])[,1], lty=2, col=i)
lines(t(th_qts[,,j,i])[,3], lty=2, col=i)
abline(h=0, col='red')
}
}
library(R2jags)
df <- read.csv(file = 'dados.csv', header = T, dec = ',')
DT::datatable(df, rownames = FALSE, options = list(pageLength = 5, autoWidth = TRUE, lengthChange = FALSE, searching=FALSE))
par(mai = c(1, 1, .1, .1), mgp = c(2, .75, 0))
t <- which(!is.na(df$Petr4_A)) # exclui dados faltantes da Petr4
y <- df$Petr4_A[t[-1]] # Abertura do dia
x <- df$Brent_F[t[-1]-1] # Fechamento do dia anterior
plot.ts(x, xlab='Tempo', ylab='Brent');plot.ts(y, xlab='Tempo', ylab='PETR4')
par(mai = c(.75, .75, .1, .1), mgp = c(2, .75, 0))
plot(x, y, pch=19, xlab='Brent', ylab='PETR4');cat('Correlação: ',cor(x,y),sep='')
X <- cbind(1,x); n <- dim(X)[1]; p <- dim(X)[2] # primeira coluna de 1's (intercepto)
xi <- rep(0, p); It <- 20000; Bi <- 19000; Nt <- 10; colnames(X) <- c('Intercept', 'Brent')
jags.data <- list(y = y, x = X, n = n, p = p, tau = .5,
xi = xi, omega2 = 10000) #hiperparâmetros
jags.params <- c("theta_tau")
theta_tau <- NULL; vtau <- c(.05, .25, .5, .75, .95); theta_lst <- list(); i <- 0
for (tau in vtau) {
jags.data$tau <- tau; i <- i+1
jagsfit <- jags(data = jags.data, parameters.to.save = jags.params, DIC = FALSE,
n.iter = It, n.burnin = Bi, n.thin = Nt,
model.file = "model_reg_quant.txt", quiet = TRUE)
theta_tau <- cbind(theta_tau, jagsfit$BUGSoutput$sims.matrix)
theta_lst[[i]] <- jagsfit$BUGSoutput$sims.matrix
}
colnames(theta_tau) <- kronecker(paste('\u03C4=',vtau,sep=''), c('_1','_X'), paste, sep=''); names(theta_lst) <- vtau
th_res <- round(apply(theta_tau, 2, quantile, probs=c(.025, .5, .975)), 3); kbl(th_res)
Ns <- nrow(theta_tau); nam_th <- names(theta_lst); pred_lst <- pred_qts <- list(); cum_qts <- NULL; i <- 0
for (tau in c(0.05, 0.5, 0.95)) {
pred <- NULL; i <- i+1
for(is in 1:Ns){
pred <- rbind(pred, (X %*% (theta_lst[[which(nam_th == tau)]])[is,])[,1])
}
pred_lst[[i]] <- pred; pred_qts[[i]] <- apply(pred, 2, quantile, probs = c(0.025, 0.5, 0.975))
cum_qts <- c(cum_qts, mean(y < pred_qts[[i]][2,]))
names(pred_lst)[i] <- names(pred_qts)[i] <- names(cum_qts)[i] <- tau
}
cum_qts
theta_tau <- NULL; vtau <- c(.05, .5, .95); theta_lst <- list(); i <- 0
for (tau in vtau) {
jags.data$tau <- tau; i <- i+1
jagsfit <- jags(data = jags.data, parameters.to.save = jags.params, DIC = FALSE,
n.iter = It, n.burnin = Bi, n.thin = Nt,
model.file = "model_reg_quant_din.txt", quiet = TRUE)
theta_tau <- cbind(theta_tau, jagsfit$BUGSoutput$sims.matrix)
theta_lst[[i]] <- jagsfit$BUGSoutput$sims.matrix
}
names(theta_lst) <- vtau
nS <- nrow(theta_lst[[1]])
th_arr <- array(dim = c(n, p, length(vtau), Ns))
for (i in 1:length(vtau)) {
for(is in 1:Ns){
th_arr[,,i,is] <- matrix(theta_lst[[i]][is,], nrow = n, byrow=FALSE)
}
}
th_qts <- apply(th_arr, 1:3, quantile, probs=c(0.025, 0.5, 0.975))
for(j in 1:p){
for(i in 1:length(vtau)){
rgt <- range(th_qts[,,j,])
if(i == 1){
plot.ts(t(th_qts[,,j,i])[,2], ylim=rgt, ylab=colnames(X)[j], xlab='Time', col=i)
}else{
lines(1:n, t(th_qts[,,j,i])[,2], col=i)
}
lines(t(th_qts[,,j,i])[,1], lty=2, col=i)
lines(t(th_qts[,,j,i])[,3], lty=2, col=i)
abline(h=0, col='red')
}
}
Ns <- nrow(theta_lst[[1]]); nam_th <- names(theta_lst); pred_lst <- pred_qts <- list(); cum_qts <- NULL; i <- 0
for (tau in c(0.05, 0.5, 0.95)) {
pred <- NULL; i <- i+1
for(is in 1:Ns){
th_mat <- matrix(theta_lst[[which(nam_th == tau)]][is,], nrow = length(y), byrow=FALSE)
pred <- rbind(pred, rowSums(X * th_mat))
}
pred_lst[[i]] <- pred; pred_qts[[i]] <- apply(pred, 2, quantile, probs = c(0.025, 0.5, 0.975))
cum_qts <- c(cum_qts, mean(y < pred_qts[[i]][2,]))
names(pred_lst)[i] <- names(pred_qts)[i] <- names(cum_qts)[i] <- tau
}
cum_qts
0.001/2
2/0.001
theta_tau <- NULL; vtau <- c(.05, .5, .95); theta_lst <- list(); i <- 0
for (tau in vtau) {
jags.data$tau <- tau; i <- i+1
jagsfit <- jags(data = jags.data, parameters.to.save = jags.params, DIC = FALSE,
n.iter = It, n.burnin = Bi, n.thin = Nt,
model.file = "model_reg_quant_din.txt", quiet = TRUE)
theta_tau <- cbind(theta_tau, jagsfit$BUGSoutput$sims.matrix)
theta_lst[[i]] <- jagsfit$BUGSoutput$sims.matrix
}
names(theta_lst) <- vtau
nS <- nrow(theta_lst[[1]])
th_arr <- array(dim = c(n, p, length(vtau), Ns))
for (i in 1:length(vtau)) {
for(is in 1:Ns){
th_arr[,,i,is] <- matrix(theta_lst[[i]][is,], nrow = n, byrow=FALSE)
}
}
th_qts <- apply(th_arr, 1:3, quantile, probs=c(0.025, 0.5, 0.975))
for(j in 1:p){
for(i in 1:length(vtau)){
rgt <- range(th_qts[,,j,])
if(i == 1){
plot.ts(t(th_qts[,,j,i])[,2], ylim=rgt, ylab=colnames(X)[j], xlab='Time', col=i)
}else{
lines(1:n, t(th_qts[,,j,i])[,2], col=i)
}
lines(t(th_qts[,,j,i])[,1], lty=2, col=i)
lines(t(th_qts[,,j,i])[,3], lty=2, col=i)
}
}
Ns <- nrow(theta_lst[[1]]); nam_th <- names(theta_lst); pred_lst <- pred_qts <- list(); cum_qts <- NULL; i <- 0
for (tau in c(0.05, 0.5, 0.95)) {
pred <- NULL; i <- i+1
for(is in 1:Ns){
th_mat <- matrix(theta_lst[[which(nam_th == tau)]][is,], nrow = length(y), byrow=FALSE)
pred <- rbind(pred, rowSums(X * th_mat))
}
pred_lst[[i]] <- pred; pred_qts[[i]] <- apply(pred, 2, quantile, probs = c(0.025, 0.5, 0.975))
cum_qts <- c(cum_qts, mean(y < pred_qts[[i]][2,]))
names(pred_lst)[i] <- names(pred_qts)[i] <- names(cum_qts)[i] <- tau
}
cum_qts
plot(th_mat[,2], type = 'l')
par(mai = c(1, 1, .1, .1), mgp = c(2, .75, 0))
rg <- range(y, pred_qts);plot.ts(y, ylim = rg, ylab = "PETR4")
for (i in 1:length(pred_qts)) {
lines(x=1:nrow(X), y=(pred_qts[[i]])[2,], col='red')
# lines(x=1:nrow(X), y=(pred_qts[[i]])[1,], col='red', lty=2)
# lines(x=1:nrow(X), y=(pred_qts[[i]])[3,], col='red', lty=2)
}
theta_lst[[1]][2,]
rg <- range(y, pred_qts);plot.ts(y, ylim = rg, ylab = "PETR4")
for (i in 1:length(pred_qts)) {
lines(x=1:nrow(X), y=(pred_qts[[i]])[2,], col='red')
lines(x=1:nrow(X), y=(pred_qts[[i]])[1,], col='red', lty=2)
lines(x=1:nrow(X), y=(pred_qts[[i]])[3,], col='red', lty=2)
}
2000^2
2/0.005
400 ^2
2/0.001
2000 ^2
theta_tau <- NULL; vtau <- c(.05, .5, .95); theta_lst <- list(); i <- 0
for (tau in vtau) {
jags.data$tau <- tau; i <- i+1
jagsfit <- jags(data = jags.data, parameters.to.save = jags.params, DIC = FALSE,
n.iter = It, n.burnin = Bi, n.thin = Nt,
model.file = "model_reg_quant_din.txt", quiet = TRUE)
theta_tau <- cbind(theta_tau, jagsfit$BUGSoutput$sims.matrix)
theta_lst[[i]] <- jagsfit$BUGSoutput$sims.matrix
}
names(theta_lst) <- vtau
nS <- nrow(theta_lst[[1]])
th_arr <- array(dim = c(n, p, length(vtau), Ns))
for (i in 1:length(vtau)) {
for(is in 1:Ns){
th_arr[,,i,is] <- matrix(theta_lst[[i]][is,], nrow = n, byrow=FALSE)
}
}
th_qts <- apply(th_arr, 1:3, quantile, probs=c(0.025, 0.5, 0.975))
for(j in 1:p){
for(i in 1:length(vtau)){
rgt <- range(th_qts[,,j,])
if(i == 1){
plot.ts(t(th_qts[,,j,i])[,2], ylim=rgt, ylab=colnames(X)[j], xlab='Time', col=i)
}else{
lines(1:n, t(th_qts[,,j,i])[,2], col=i)
}
lines(t(th_qts[,,j,i])[,1], lty=2, col=i)
lines(t(th_qts[,,j,i])[,3], lty=2, col=i)
}
}
Ns <- nrow(theta_lst[[1]]); nam_th <- names(theta_lst); pred_lst <- pred_qts <- list(); cum_qts <- NULL; i <- 0
for (tau in c(0.05, 0.5, 0.95)) {
pred <- NULL; i <- i+1
for(is in 1:Ns){
th_mat <- matrix(theta_lst[[which(nam_th == tau)]][is,], nrow = length(y), byrow=FALSE)
pred <- rbind(pred, rowSums(X * th_mat))
}
pred_lst[[i]] <- pred; pred_qts[[i]] <- apply(pred, 2, quantile, probs = c(0.025, 0.5, 0.975))
cum_qts <- c(cum_qts, mean(y < pred_qts[[i]][2,]))
names(pred_lst)[i] <- names(pred_qts)[i] <- names(cum_qts)[i] <- tau
}
cum_qts
plot(th_mat[,2], type = 'l')
par(mai = c(1, 1, .1, .1), mgp = c(2, .75, 0))
rg <- range(y, pred_qts);plot.ts(y, ylim = rg, ylab = "PETR4")
rg <- range(y, pred_qts);plot.ts(y, ylim = rg, ylab = "PETR4")
for (i in 1:length(pred_qts)) {
lines(x=1:nrow(X), y=(pred_qts[[i]])[2,], col='red')
lines(x=1:nrow(X), y=(pred_qts[[i]])[1,], col='red', lty=2)
lines(x=1:nrow(X), y=(pred_qts[[i]])[3,], col='red', lty=2)
}
library(R2jags)
df <- read.csv(file = 'dados.csv', header = T, dec = ',')
DT::datatable(df, rownames = FALSE, options = list(pageLength = 5, autoWidth = TRUE, lengthChange = FALSE, searching=FALSE))
par(mai = c(1, 1, .1, .1), mgp = c(2, .75, 0))
t <- which(!is.na(df$Petr4_A)) # exclui dados faltantes da Petr4
y <- df$Petr4_A[t[-1]] # Abertura do dia
x <- df$Brent_F[t[-1]-1] # Fechamento do dia anterior
plot.ts(x, xlab='Tempo', ylab='Brent');plot.ts(y, xlab='Tempo', ylab='PETR4')
par(mai = c(.75, .75, .1, .1), mgp = c(2, .75, 0))
plot(x, y, pch=19, xlab='Brent', ylab='PETR4');cat('Correlação: ',cor(x,y),sep='')
X <- cbind(1,x); n <- dim(X)[1]; p <- dim(X)[2] # primeira coluna de 1's (intercepto)
xi <- rep(0, p); It <- 100000; Bi <- 99000; Nt <- 10; colnames(X) <- c('Intercept', 'Brent')
jags.data <- list(y = y, x = X, n = n, p = p, tau = .5,
xi = xi, omega2 = 10000) #hiperparâmetros
jags.params <- c("theta_tau")
theta_tau <- NULL; vtau <- c(.05, .25, .5, .75, .95); theta_lst <- list(); i <- 0
for (tau in vtau) {
jags.data$tau <- tau; i <- i+1
jagsfit <- jags(data = jags.data, parameters.to.save = jags.params, DIC = FALSE,
n.iter = It, n.burnin = Bi, n.thin = Nt,
model.file = "model_reg_quant.txt", quiet = TRUE)
theta_tau <- cbind(theta_tau, jagsfit$BUGSoutput$sims.matrix)
theta_lst[[i]] <- jagsfit$BUGSoutput$sims.matrix
}
colnames(theta_tau) <- kronecker(paste('\u03C4=',vtau,sep=''), c('_1','_X'), paste, sep=''); names(theta_lst) <- vtau
th_res <- round(apply(theta_tau, 2, quantile, probs=c(.025, .5, .975)), 3); kbl(th_res)
Ns <- nrow(theta_tau); nam_th <- names(theta_lst); pred_lst <- pred_qts <- list(); cum_qts <- NULL; i <- 0
for (tau in c(0.05, 0.5, 0.95)) {
pred <- NULL; i <- i+1
for(is in 1:Ns){
pred <- rbind(pred, (X %*% (theta_lst[[which(nam_th == tau)]])[is,])[,1])
}
pred_lst[[i]] <- pred; pred_qts[[i]] <- apply(pred, 2, quantile, probs = c(0.025, 0.5, 0.975))
cum_qts <- c(cum_qts, mean(y < pred_qts[[i]][2,]))
names(pred_lst)[i] <- names(pred_qts)[i] <- names(cum_qts)[i] <- tau
}
cum_qts
theta_tau <- NULL; vtau <- c(.05, .5, .95); theta_lst <- list(); i <- 0
for (tau in vtau) {
jags.data$tau <- tau; i <- i+1
jagsfit <- jags(data = jags.data, parameters.to.save = jags.params, DIC = FALSE,
n.iter = It, n.burnin = Bi, n.thin = Nt,
model.file = "model_reg_quant_din.txt", quiet = TRUE)
theta_tau <- cbind(theta_tau, jagsfit$BUGSoutput$sims.matrix)
theta_lst[[i]] <- jagsfit$BUGSoutput$sims.matrix
}
names(theta_lst) <- vtau
nS <- nrow(theta_lst[[1]])
th_arr <- array(dim = c(n, p, length(vtau), Ns))
for (i in 1:length(vtau)) {
for(is in 1:Ns){
th_arr[,,i,is] <- matrix(theta_lst[[i]][is,], nrow = n, byrow=FALSE)
}
}
th_qts <- apply(th_arr, 1:3, quantile, probs=c(0.025, 0.5, 0.975))
for(j in 1:p){
for(i in 1:length(vtau)){
rgt <- range(th_qts[,,j,])
if(i == 1){
plot.ts(t(th_qts[,,j,i])[,2], ylim=rgt, ylab=colnames(X)[j], xlab='Time', col=i)
}else{
lines(1:n, t(th_qts[,,j,i])[,2], col=i)
}
lines(t(th_qts[,,j,i])[,1], lty=2, col=i)
lines(t(th_qts[,,j,i])[,3], lty=2, col=i)
}
}
Ns <- nrow(theta_lst[[1]]); nam_th <- names(theta_lst); pred_lst <- pred_qts <- list(); cum_qts <- NULL; i <- 0
for (tau in c(0.05, 0.5, 0.95)) {
pred <- NULL; i <- i+1
for(is in 1:Ns){
th_mat <- matrix(theta_lst[[which(nam_th == tau)]][is,], nrow = length(y), byrow=FALSE)
pred <- rbind(pred, rowSums(X * th_mat))
}
pred_lst[[i]] <- pred; pred_qts[[i]] <- apply(pred, 2, quantile, probs = c(0.025, 0.5, 0.975))
cum_qts <- c(cum_qts, mean(y < pred_qts[[i]][2,]))
names(pred_lst)[i] <- names(pred_qts)[i] <- names(cum_qts)[i] <- tau
}
cum_qts
par(mai = c(1, 1, .1, .1), mgp = c(2, .75, 0))
rg <- range(y, pred_qts);plot.ts(y, ylim = rg, ylab = "PETR4")
for (i in 1:length(pred_qts)) {
lines(x=1:nrow(X), y=(pred_qts[[i]])[2,], col='red')
lines(x=1:nrow(X), y=(pred_qts[[i]])[1,], col='red', lty=2)
lines(x=1:nrow(X), y=(pred_qts[[i]])[3,], col='red', lty=2)
}
jags.data
pred_qts[[i]]
pred_qts[[i]][2,]
theta_tau <- NULL; vtau <- c(.05, .25, .5, .75, .95); theta_lst <- list(); i <- 0
for (tau in vtau) {
jags.data$tau <- tau; i <- i+1
jagsfit <- jags(data = jags.data, parameters.to.save = jags.params, DIC = FALSE,
n.iter = It, n.burnin = Bi, n.thin = Nt,
model.file = "model_reg_quant.txt", quiet = TRUE)
theta_tau <- cbind(theta_tau, jagsfit$BUGSoutput$sims.matrix)
theta_lst[[i]] <- jagsfit$BUGSoutput$sims.matrix
}
colnames(theta_tau) <- kronecker(paste('\u03C4=',vtau,sep=''), c('_1','_X'), paste, sep=''); names(theta_lst) <- vtau
th_res <- round(apply(theta_tau, 2, quantile, probs=c(.025, .5, .975)), 3); kbl(th_res)
Ns <- nrow(theta_tau); nam_th <- names(theta_lst); pred_lst <- pred_qts <- list(); cum_qts <- NULL; i <- 0
for (tau in c(0.05, 0.5, 0.95)) {
pred <- NULL; i <- i+1
for(is in 1:Ns){
pred <- rbind(pred, (X %*% (theta_lst[[which(nam_th == tau)]])[is,])[,1])
}
pred_lst[[i]] <- pred; pred_qts[[i]] <- apply(pred, 2, quantile, probs = c(0.025, 0.5, 0.975))
cum_qts <- c(cum_qts, mean(y < pred_qts[[i]][2,]))
names(pred_lst)[i] <- names(pred_qts)[i] <- names(cum_qts)[i] <- tau
}
cum_qts
pred_qts
dim(pred_qts)
pred_qts
dim(pred_qts)
nrow(pred_qts)
pred_qts
pred_qts
pred_qts[,1]
pred_qts[1,]
pred_qts
pred_qts[[1]]
th_res
theta_lst
theta_lst[[1]]
jags.data
colMeans(th_res[[i]])
colMeans(th_res[[1]])
theta_lst
colMeans(th0[[1]])
th0 <- theta_lst
th0
colMeans(th0[[1]])
jags.params
jags.params
colMeans(th0[[i]])
th0 <- theta_lst; theta_tau <- NULL; vtau <- c(.05, .5, .95); theta_lst <- list(); i <- 0
for (tau in vtau) {
jags.data$tau <- tau; i <- i+1; jags.data$xi <- colMeans(th0[[i]])
jagsfit <- jags(data = jags.data, parameters.to.save = jags.params, DIC = FALSE,
n.iter = It, n.burnin = Bi, n.thin = Nt,
model.file = "model_reg_quant_din.txt", quiet = TRUE)
theta_tau <- cbind(theta_tau, jagsfit$BUGSoutput$sims.matrix)
theta_lst[[i]] <- jagsfit$BUGSoutput$sims.matrix
}
names(theta_lst) <- vtau
nS <- nrow(theta_lst[[1]])
th_arr <- array(dim = c(n, p, length(vtau), Ns))
for (i in 1:length(vtau)) {
for(is in 1:Ns){
th_arr[,,i,is] <- matrix(theta_lst[[i]][is,], nrow = n, byrow=FALSE)
}
}
th_qts <- apply(th_arr, 1:3, quantile, probs=c(0.025, 0.5, 0.975))
for(j in 1:p){
for(i in 1:length(vtau)){
rgt <- range(th_qts[,,j,])
if(i == 1){
plot.ts(t(th_qts[,,j,i])[,2], ylim=rgt, ylab=colnames(X)[j], xlab='Time', col=i)
}else{
lines(1:n, t(th_qts[,,j,i])[,2], col=i)
}
lines(t(th_qts[,,j,i])[,1], lty=2, col=i)
lines(t(th_qts[,,j,i])[,3], lty=2, col=i)
}
}
Ns <- nrow(theta_lst[[1]]); nam_th <- names(theta_lst); pred_lst <- pred_qts <- list(); cum_qts <- NULL; i <- 0
for (tau in c(0.05, 0.5, 0.95)) {
pred <- NULL; i <- i+1
for(is in 1:Ns){
th_mat <- matrix(theta_lst[[which(nam_th == tau)]][is,], nrow = length(y), byrow=FALSE)
pred <- rbind(pred, rowSums(X * th_mat))
}
pred_lst[[i]] <- pred; pred_qts[[i]] <- apply(pred, 2, quantile, probs = c(0.025, 0.5, 0.975))
cum_qts <- c(cum_qts, mean(y < pred_qts[[i]][2,]))
names(pred_lst)[i] <- names(pred_qts)[i] <- names(cum_qts)[i] <- tau
}
cum_qts
par(mai = c(1, 1, .1, .1), mgp = c(2, .75, 0))
rg <- range(y, pred_qts);plot.ts(y, ylim = rg, ylab = "PETR4")
for (i in 1:length(pred_qts)) {
lines(x=1:nrow(X), y=(pred_qts[[i]])[2,], col='red')
lines(x=1:nrow(X), y=(pred_qts[[i]])[1,], col='red', lty=2)
lines(x=1:nrow(X), y=(pred_qts[[i]])[3,], col='red', lty=2)
}
th0
.01/2
2/.01
2/.001
(2/.01)^2
colors()
colors()[1]
colors()[2]
colors()[3]
colors()[4]
